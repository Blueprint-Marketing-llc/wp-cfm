{"name":"WP-CFM","tagline":"WordPress Configuration Management","body":"#### WP-CFM: Configuration Management for WordPress\r\n\r\nDeploying database changes in WordPress is hard, especially when working on teams with multiple developers. This project aims at solving this problem by storing database configuration in the filesystem. It's like Drupal's \"Features\" module for WordPress.\r\n\r\n![Admin Screen](http://i.imgur.com/opQhDUa.png)\r\n\r\n#### What does this mean for me?\r\n\r\n* Less need to copy the database. If you make changes, **Push** your bundle to the filesystem. To load changes, **Pull** the bundle into your database.\r\n* No need to manually apply database settings changes. No more \"fire drills\" where you're rushing to figure out which settings you forgot to change.\r\n\r\n#### Terminology\r\n\r\n* **Bundle**: A group of settings to track. This could be a single setting, or all the site's available settings.\r\n* **Push**: Export configuration from your database to the filesystem.\r\n* **Pull**: Import configuration from the filesystem into your database.\r\n\r\n#### Developer Hooks\r\n\r\n* **wpcfm_configuration_items** - Add your plugin's custom configuration\r\n\r\n```php\r\n/**\r\n * Register new configuration items\r\n */\r\nfunction my_configuration_items( $items ) {\r\n    $items['cfs_field_groups'] = array(\r\n        'value' => 'MY CONFIGURATION DATA',\r\n        'group' => 'WP Options', // optional\r\n        'callback' => 'my_pull_handler', // optional\r\n    );\r\n    return $items;\r\n}\r\nadd_filter( 'wpcfm_configuration_items', 'my_configuration_items' );\r\n```\r\n\r\n#### Is that it?\r\n\r\nAlmost! WP-CFM automatically handles configuration within the `wp_options` table. If your plugin stores settings elsewhere, then you'll need to use the above `callback` parameter to tell WP-CFM how to properly import (Pull) the configuration into the database. It accepts a function name (string) or method (array).\r\n\r\n```php\r\n/**\r\n * $params['name']          The option name\r\n * $params['group']         The option group\r\n * $params['old_value']     The current DB value that will get overwritten\r\n * $params['new_value']     The new DB value\r\n */\r\nfunction my_pull_handler( $params ) {\r\n    // Save something\r\n}\r\n```\r\n\r\n#### WP-CLI Support\r\n\r\nWP-CFM includes 2 custom WP-CLI commands for performing actions from the command-line.\r\n\r\n```php\r\nwp config pull <bundle_name>\r\nwp config push <bundle_name>\r\n```\r\n\r\nYou can optionally set `bundle_name` to \"all\" to push / pull all bundles at once.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}